AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  ClusterName:
    Type: String
    Default: ECSCluster
  ImageId:
    Type: String
    Default: ami-b743bed1
Resources:
  LOGGING:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: sandbox
      RetentionInDays: 7
  ECSSecurityGroupALBports:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Fn::ImportValue: ECSSecurityGroup
      IpProtocol: tcp
      FromPort: '31000'
      ToPort: '61000'
      SourceSecurityGroupId:
        Fn::ImportValue: ECSSecurityGroup
  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      HealthCheckType: 'EC2'
      VPCZoneIdentifier:
      - Fn::ImportValue: Subnet1
      - Fn::ImportValue: Subnet2
      LaunchConfigurationName: !Ref 'ECSInstances'
      MinSize: 0
      MaxSize: 1
      DesiredCapacity: 1
      TargetGroupARNs:
      - Fn::ImportValue: default-tg
      Tags:
      - Key: Name
        Value: ecs-container
        PropagateAtLaunch: true
  ECSInstances:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref 'ImageId'
      InstanceType: t2.micro
      IamInstanceProfile:
        Fn::ImportValue: ECSInstanceProfile
      AssociatePublicIpAddress: true
      SecurityGroups:
      - Fn::ImportValue: ECSSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          echo ECS_CLUSTER=${ClusterName} >> /etc/ecs/ecs.config
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --region ${AWS::Region}
